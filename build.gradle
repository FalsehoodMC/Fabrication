plugins {
	id 'fabric-loom' version '0.5-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.version
group = project.maven_group

repositories {
	maven {
		name = "JitPack"
		url = "https://jitpack.io"
	}
	maven {
		url = "https://maven.ssf.tf"
	}
}

dependencies {
	//to change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	modImplementation include(fabricApi.module("fabric-resource-loader-v0", "${project.fabric_version}"))
	modImplementation include(fabricApi.module("fabric-command-api-v1", "${project.fabric_version}"))
	modImplementation include(fabricApi.module("fabric-item-api-v1", "${project.fabric_version}"))
	modImplementation include(fabricApi.module("fabric-key-binding-api-v1", "${project.fabric_version}"))
	modImplementation include(fabricApi.module("fabric-rendering-v1", "${project.fabric_version}"))
	modImplementation(include("com.github.Queerbric:pridelib:87d9cb94cb")) {
		transitive = false
	}
	modImplementation("io.github.prospector:modmenu:1.16.6") {
		transitive = false
	}
	
	modRuntime("com.github.SuperCoder7979:databreaker:715b589") {
		transitive = false
	}
	modRuntime fabricApi.module("fabric-screen-api-v1", "${project.fabric_version}")
	modImplementation("tf.ssf.sfort:fscript:1.1.5-1.16"){
		transitive = false
	}
}

minecraft {
	accessWidener "src/main/resources/fabrication.accesswidener"
}

processResources {
	inputs.property "version", project.version

	from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"
		expand "version": project.version
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude "fabric.mod.json"
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

jar {
	doFirst {
		StringBuilder bldr = new StringBuilder();
		File dir = file('build/classes/java/main');
		dir.eachFileRecurse(groovy.io.FileType.FILES, {
			if (it.name.endsWith(".class")) {
				bldr.append(it.getAbsolutePath().substring(dir.getAbsolutePath().length()+1))
				bldr.append("\n")
			}
		})
		file('build/tmp/classes.txt').text = bldr.toString();
	}
	from "LICENSE"
	from "build/tmp/classes.txt"
}
